import matplotlib.pyplot as plt
from PyQt6.QtWidgets import QVBoxLayout, QHBoxLayout, QGridLayout, QLabel, QGroupBox, QLineEdit, QPushButton, QTableWidget, QFrame, QComboBox, QHeaderView, QCheckBox
from PyQt6.QtGui import QDoubleValidator
from PyQt6.QtCore import Qt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas

def initUI(self):
    self.setWindowTitle("UAV deployment simulator")
    self.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray;")  
    self.resize(1780, 671) 
    main_layout = QHBoxLayout()
    input_frame = QFrame(self)
    input_frame.setFixedWidth(220)
    input_frame.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray;")  
    input_layout = QGridLayout(input_frame)
    self.title_button = QPushButton("Simulation Parameters", self)
    self.title_button.setFixedHeight(35)
    self.title_button.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 16px; background-color: #020082; color: #E0E0E0;")
    self.title_button.clicked.connect(self.capture_and_save)
    self.title_button.setEnabled(True)  
    input_layout.addWidget(self.title_button, 0, 0, 1, 2)
    self.inputs = []
    param_labels = [
        "Latitude", "Longitude", "Latitude range (m)", "Longitude range (m)", "Height min (m)", "Height max (m)",
        "Tx power min (dBm)", "Tx power max (dBm)", "Num of QoS groups", "QoS values (bps)", "Num of UEs", "Num of UAVs", 
        "Carrier frequency (Hz)", "Bandwidth (Hz)", "Speed of light (m/s)", "N<sub>0</sub> (dBm/Hz)", "Environment"]
    default_values = ["37.5509442", "126.9410023", "3000", "3000", "100", "500", "20", "40", "", "1e6,2e6,4e6","50", "3", "2.1e9", "10e6", "3e8", "-174"]
    row_offset = 1  
    for i, (label, default) in enumerate(zip(param_labels[:-1], default_values)):
        lbl = QLabel(self)
        if "(" in label and ")" in label:
            parts = label.split("(")
            lbl.setText(f"{parts[0]}<b>({parts[1]}</b>")
        else:
            lbl.setText(f"{label}")
        lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: #E0E0E0; padding: 4px; ")
        lbl.setFixedWidth(126) 
        if label == "Num of QoS groups":
            self.option_select_6 = QComboBox(self)
            self.option_select_6.addItems(["2", "3", "4", "5"])
            self.option_select_6.setCurrentText("3") 
            self.option_select_6.setStyleSheet("font-family: 'Segoe UI'; background-color: white; ")
            self.option_select_6.setFixedWidth(70) 
            input_layout.addWidget(lbl, i + row_offset, 0)
            input_layout.addWidget(self.option_select_6, i + row_offset, 1, alignment=Qt.AlignmentFlag.AlignRight)
        else:
            line_edit = QLineEdit(self)
            line_edit.setValidator(QDoubleValidator())
            line_edit.setStyleSheet("font-family: 'Segoe UI'; background-color: white; ")
            line_edit.setText(default)
            line_edit.setFixedWidth(70)  
            self.inputs.append(line_edit)
            input_layout.addWidget(lbl, i + row_offset, 0)
            input_layout.addWidget(line_edit, i + row_offset, 1, alignment=Qt.AlignmentFlag.AlignRight)
    lbl_option = QLabel(self)
    lbl_option.setText(f"{param_labels[-1]}")
    lbl_option.setFixedWidth(126)
    lbl_option.setStyleSheet("font-family: 'Segoe UI'; background-color: #E0E0E0; padding: 4px;")
    self.option_select = QComboBox(self)
    self.option_select.addItems(["Suburban", "Urban", "Dense urban", "Highrise urban"])
    self.option_select.setCurrentText("Urban")  
    self.option_select.setStyleSheet("font-family: 'Segoe UI'; background-color: white; ")
    self.option_select.setFixedWidth(70)
    input_layout.addWidget(lbl_option, len(default_values) + row_offset, 0)
    input_layout.addWidget(self.option_select, len(default_values) + row_offset, 1, alignment=Qt.AlignmentFlag.AlignRight)
    new_input_label = QLabel(self)
    new_input_label.setText("Fixed seed")
    new_input_label.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px;")  
    new_input_label.setFixedWidth(126)  
    self.new_input_field = QLineEdit(self)
    self.new_input_field.setValidator(QDoubleValidator())
    self.new_input_field.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; border: 1px lightgray;" )  # 비활성화 상태의 배경 색 및 테두리 색 설정
    self.new_input_field.setFixedWidth(70)  
    self.new_input_field.setText("None")
    self.new_input_field.setEnabled(False)
    self.random_seed_checkbox = QCheckBox(self)
    self.random_seed_checkbox.setGeometry(10, 10, 20, 20) 
    self.random_seed_checkbox.stateChanged.connect(self.toggle_random_seed_input)
    input_layout.addWidget(new_input_label, len(default_values) + row_offset + 1, 0)
    input_layout.addWidget(self.random_seed_checkbox, len(default_values) + row_offset + 1, 0, alignment=Qt.AlignmentFlag.AlignRight)
    input_layout.addWidget(self.new_input_field, len(default_values) + row_offset + 1, 1, alignment=Qt.AlignmentFlag.AlignRight)
    generate_layout = QHBoxLayout()
    self.reset_button = QPushButton("Reset", self)
    self.reset_button.setFixedHeight(35)
    self.reset_button.setFixedWidth(200)
    self.reset_button.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 15px; background-color: lightgray;")
    self.reset_button.setEnabled(False) 
    self.reset_button.clicked.connect(self.reset_to_initial)
    generate_layout.addWidget(self.reset_button)
    input_layout.addLayout(generate_layout, len(default_values) + row_offset + 2, 0, 1, 2)
    generate_layout = QHBoxLayout()
    self.generate_button = QPushButton("Load", self)
    self.generate_button.setFixedHeight(35)
    self.generate_button.setFixedWidth(200)
    self.generate_button.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 15px; background-color: lightgray;")
    self.generate_button.clicked.connect(self.generate_axes)
    generate_layout.addWidget(self.generate_button)
    input_layout.addLayout(generate_layout, len(default_values) + row_offset + 3, 0, 1, 2)
    main_layout.addWidget(input_frame)
    input_frame2 = QFrame(self)
    input_frame2.setFixedWidth(220)
    input_frame2.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray;")  
    input_layout2 = QGridLayout(input_frame2)
    self.title_button2 = QPushButton("Weather Conditions", self)
    self.title_button2.setFixedHeight(35)
    self.title_button2.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 16px; background-color: #020082; color: #E0E0E0")
    self.title_button2.clicked.connect(self.toggle_region3)
    input_layout2.addWidget(self.title_button2, 0, 0, 1, 2)
    wth_chx_label = QLabel(self)
    wth_chx_label.setText("Use real-time weather data")
    wth_chx_label.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px;")  
    wth_chx_label.setFixedWidth(200) 
    self.weather_checkbox = QCheckBox(self)
    self.weather_checkbox.setChecked(True)
    self.weather_checkbox.setGeometry(10, 10, 20, 20)
    self.weather_checkbox.stateChanged.connect(self.weather_input)
    input_layout2.addWidget(wth_chx_label, 1, 0)
    input_layout2.addWidget(self.weather_checkbox, 1, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.inputs2 = []
    param_labels2 = ["Temperature (°C)", "Relative humidity (%)", "Rain rate (mm/h)", "Snow rate (mm/h)",""]
    default_values2 = ["25", "80", "20", "0",""]
    for i, (label, default) in enumerate(zip(param_labels2[:], default_values2)):
        lbl = QLabel(self)
        if "(" in label and ")" in label:
            parts = label.split("(")
            lbl.setText(f"{parts[0]}<b>({parts[1]}</b>")
        else:
            lbl.setText(f"{label}")
        lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: #E0E0E0; padding: 4px; ")
        lbl.setFixedWidth(126) 
        if label == "":
            lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px; ")
            lbl.setFixedWidth(200) 
            lbl.setFixedHeight(11) 
        input_layout2.addWidget(lbl, i + 2, 0)
    self.w1_input_field = QLineEdit(self)
    self.w1_input_field.setValidator(QDoubleValidator())
    self.w1_input_field.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; " )  
    self.w1_input_field.setFixedWidth(70) 
    self.w1_input_field.setText("")
    self.w1_input_field.setEnabled(False)
    input_layout2.addWidget(self.w1_input_field, 2, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.w2_input_field = QLineEdit(self)
    self.w2_input_field.setValidator(QDoubleValidator())
    self.w2_input_field.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; " ) 
    self.w2_input_field.setFixedWidth(70) 
    self.w2_input_field.setText("") 
    self.w2_input_field.setEnabled(False) 
    input_layout2.addWidget(self.w2_input_field, 3, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.w3_input_field = QLineEdit(self)
    self.w3_input_field.setValidator(QDoubleValidator())
    self.w3_input_field.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; " )  
    self.w3_input_field.setFixedWidth(70)  
    self.w3_input_field.setText("") 
    self.w3_input_field.setEnabled(False) 
    input_layout2.addWidget(self.w3_input_field, 4, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.w4_input_field = QLineEdit(self)
    self.w4_input_field.setValidator(QDoubleValidator())
    self.w4_input_field.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; " ) 
    self.w4_input_field.setFixedWidth(70) 
    self.w4_input_field.setText("") 
    self.w4_input_field.setEnabled(False) 
    input_layout2.addWidget(self.w4_input_field, 5, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.t3 = QPushButton("Algorithm Parameters", self)
    self.t3.setFixedHeight(35)
    self.t3.setStyleSheet("font-family: 'Segoe UI'; background-color: #020082; color: #E0E0E0; font-weight: bold; font-size: 16px;")
    input_layout2.addWidget(self.t3, 7, 0, 1, 2)
    self.inputs3 = []
    param_labels3 = ["Improved SA for UAVs' coordinates", "Cooling rate", "Termination threshold", "Iterations", "Stagnation count", "Adapative factor",
        "PSO for UAVs' transmit powers", "w<sub>i</sub>, w<sub>f</sub>", "c<sub>1</sub>, c<sub>2</sub>", "Num of particles", "Iterations",""]
    default_values3 = ["", "0.8", "1e-3", "10", "10", "1.2", 
                        "", "0.9,0.4", "1.5,1.5", "10", "10",""]
    row_offset3 = 8  
    for i, (label, default) in enumerate(zip(param_labels3[:], default_values3)):
        lbl = QLabel(self)
        lbl.setText(f"{label}")
        if label == "Improved SA for UAVs' coordinates" or label == "PSO for UAVs' transmit powers" :
            lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px; ")
            lbl.setFixedWidth(200)
            input_layout2.addWidget(lbl, i + row_offset3, 0 ,alignment=Qt.AlignmentFlag.AlignCenter)
        elif label == "":
            lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px; ")
            lbl.setFixedWidth(200)
            lbl.setFixedHeight(9)
            input_layout2.addWidget(lbl, i + row_offset3, 0 ,alignment=Qt.AlignmentFlag.AlignCenter)
        else:
            lbl.setStyleSheet("font-family: 'Segoe UI'; background-color: #E0E0E0; padding: 4px; ")
            lbl.setFixedWidth(126) 
            line_edit = QLineEdit(self)
            line_edit.setValidator(QDoubleValidator())
            line_edit.setStyleSheet("font-family: 'Segoe UI'; background-color: white; ")
            line_edit.setText(default)
            line_edit.setFixedWidth(70)
            self.inputs3.append(line_edit)
            input_layout2.addWidget(lbl, i + row_offset3, 0)
            input_layout2.addWidget(line_edit, i + row_offset3, 1, alignment=Qt.AlignmentFlag.AlignRight)
    self.run_button = QPushButton("START", self)
    self.run_button.setFixedHeight(50)
    self.run_button.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 22px; background-color: lightgray;")
    self.run_button.setEnabled(False)
    self.run_button.clicked.connect(self.run_simulation)
    input_layout2.addWidget(self.run_button, 20, 0, 1, 2)
    addlbl = QLabel(self)
    addlbl.setText("")
    addlbl.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray; padding: 4px; ")
    addlbl.setFixedWidth(200)
    addlbl.setFixedHeight(8)
    input_layout2.addWidget(addlbl, 21, 0 ,alignment=Qt.AlignmentFlag.AlignCenter)
    main_layout.addWidget(input_frame2)
    result_frame = QFrame(self)
    result_frame.setStyleSheet("font-family: 'Segoe UI'; background-color: lightgray;") 
    self.result_layout = QGridLayout(result_frame)  
    self.tables = [] 
    sub_frame_1 = QFrame(self)
    sub_frame_1.setStyleSheet("font-family: 'Segoe UI'; background-color: white;")  
    sub_frame_1.setFrameShape(QFrame.Shape.Box)
    sub_layout_1 = QVBoxLayout(sub_frame_1)
    sub_layout_1.setContentsMargins(0, 0, 0, 0) 
    sub_layout_1.setSpacing(0) 
    self.figure_1 = plt.figure()
    self.canvas_1 = FigureCanvas(self.figure_1)
    sub_layout_1.addWidget(self.canvas_1)
    self.result_layout.addWidget(sub_frame_1, 0, 0, 2, 1)
    self.result_layout.setColumnStretch(0, 17)  
    sub_frame_2_1 = QFrame(self)
    sub_frame_2_1.setFrameShape(QFrame.Shape.Box)
    sub_layout_2_1 = QVBoxLayout(sub_frame_2_1)
    sub_layout_2_1.setContentsMargins(0, 0, 0, 0)
    self.figure_2_1 = plt.figure()
    self.canvas_2_1 = FigureCanvas(self.figure_2_1)
    sub_layout_2_1.addWidget(self.canvas_2_1)
    self.result_layout.addWidget(sub_frame_2_1, 0, 1)
    self.result_layout.setRowStretch(0, 5) 
    self.result_layout.setColumnStretch(1, 20)  
    sub_frame_2_2 = QFrame(self)
    sub_frame_2_2.setFrameShape(QFrame.Shape.Box)
    sub_frame_2_2.setStyleSheet("font-family: 'Segoe UI'; background-color: white;")
    sub_layout_2_2 = QVBoxLayout(sub_frame_2_2)
    sub_layout_2_2.setContentsMargins(0, 0, 0, 0)
    self.table_title = QLabel("UAV-BSs Deployment Information", self)
    self.table_title.setStyleSheet("font-family: 'Segoe UI'; font-weight: bold; font-size: 15px; padding: 5px;")
    self.table_title.setAlignment(Qt.AlignmentFlag.AlignCenter)
    self.table_title.setVisible(False) 
    sub_layout_2_2.addWidget(self.table_title)
    self.subtitle_1 = QLabel("Weather parameters for the selected region", self)
    self.subtitle_1.setStyleSheet("font-size: 12px; font-style: italic;  padding: 2px;")
    self.subtitle_1.setAlignment(Qt.AlignmentFlag.AlignCenter)
    self.subtitle_1.setVisible(False) 
    sub_layout_2_2.addWidget(self.subtitle_1)
    self.subtitle_2 = QLabel("Data includes temperature, humidity, rainrate, and snowrate.", self)
    self.subtitle_2.setStyleSheet("font-size: 12px; font-style: italic;  padding: 2px;")
    self.subtitle_2.setAlignment(Qt.AlignmentFlag.AlignCenter)
    self.subtitle_2.setVisible(False) 
    sub_layout_2_2.addWidget(self.subtitle_2)
    self.subtitle_3 = QLabel("Data includes temperature, humidity, rainrate, and snowrate.", self)
    self.subtitle_3.setStyleSheet("font-size: 12px; font-style: italic;  padding: 2px;")
    self.subtitle_3.setAlignment(Qt.AlignmentFlag.AlignCenter)
    self.subtitle_3.setVisible(False) 
    sub_layout_2_2.addWidget(self.subtitle_3)
    self.table_2_2 = QTableWidget(self)
    self.table_2_2.setColumnCount(4) 
    self.table_2_2.setHorizontalHeaderLabels(["X", "Y", "Z", "P"])
    self.table_2_2.horizontalHeader().setSectionResizeMode(QHeaderView.ResizeMode.Stretch)
    self.tables.append(self.table_2_2)
    sub_layout_2_2.addWidget(self.table_2_2)
    self.result_layout.addWidget(sub_frame_2_2, 1, 1)
    self.result_layout.setRowStretch(1, 2)
    self.result_layout.setColumnStretch(1, 20)  
    self.sub_frame_3 = QFrame(self)
    self.sub_frame_3.setFrameShape(QFrame.Shape.Box)
    sub_layout_3 = QVBoxLayout(self.sub_frame_3)
    sub_layout_3.setContentsMargins(0, 5, 0, 0)
    self.figures_3 = [plt.figure() for _ in range(2)]
    for fig in self.figures_3:
        fig.patch.set_linewidth(0.5) 
        fig.patch.set_edgecolor("gray") 
    self.canvases_3 = [FigureCanvas(fig) for fig in self.figures_3]
    for i, canvas in enumerate(self.canvases_3):
        graph_window = QGroupBox("                                                                                                         —      ☐      ⨉")  
        graph_window.setStyleSheet("font-size: 11px; background-color: lightgray;")
        graph_layout = QVBoxLayout(graph_window)
        graph_layout.addWidget(canvas)
        sub_layout_3.addWidget(graph_window)
    self.result_layout.addWidget(self.sub_frame_3, 0, 2, 2, 1)
    self.result_layout.setColumnStretch(2, 17)  
    main_layout.addWidget(result_frame)
    self.setLayout(main_layout)
    self.show()
    self.clear_results()
